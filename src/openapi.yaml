openapi: 3.0.0
security:
  - groupAuthz: []
info:
  title: The otomi-stack API
  description: Holds the entire schema needed by console to autogenerate forms
  version: PLACEHOLDER
externalDocs:
  description: This is the base url of the external documentation
  url: 'https://otomi.io/'
x-responses:
  BadRequest:
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OpenApiValidationError'
  OtomiStackError:
    description: Resource already exists
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OtomiStackError'
  NotFound:
    description: Resource does not exist
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OtomiStackError'
x-post-responses:
  '400':
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OpenApiValidationError'
  '409':
    description: Resource already exists
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OtomiStackError'
x-get-responses:
  '400':
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OpenApiValidationError'
  '404':
    description: Resource does not exist
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_OtomiStackError'
paths:
  /clusters:
    get:
      operationId: getClusters
      description: Get available clusters
      x-aclSchema: Clusters
      responses:
        '200':
          description: Successfully obtained cluster collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clusters_Clusters'
  /secrets:
    get:
      operationId: getAllSecrets
      description: Get all secrets
      x-aclSchema: Secrets
      responses:
        '200':
          description: Successfully obtained all secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets_Secrets'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
  /services:
    get:
      operationId: getAllServices
      description: Get services from a given team
      x-aclSchema: Services
      responses:
        '200':
          description: Successfully obtained all services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services_Services'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
  /teams:
    get:
      operationId: getTeams
      description: Get teams collection
      x-aclSchema: Teams
      responses:
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams_Teams'
    post:
      operationId: createTeam
      description: Create a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/team_Team'
        description: Team object that needs to be added to the collection
        required: true
      responses:
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '409':
          description: Resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/teams/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeam
      description: Get a specific team
      x-aclSchema: Team
      responses:
        '200':
          description: Successfully obtained team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    put:
      operationId: editTeam
      description: Edit a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/team_Team'
        description: Team object that contains updated values
        required: true
      responses:
        '200':
          description: Successfully edited team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    delete:
      operationId: deleteTeam
      description: Delete team
      x-aclSchema: Team
      responses:
        '200':
          description: Successfully deleted a team
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/teams/{teamId}/services':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamServices
      description: Get services from a given team
      x-aclSchema: Services
      responses:
        '200':
          description: Successfully obtained services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services_Services'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
    post:
      operationId: createService
      description: Create a service
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_Service'
        description: Service object
        required: true
      responses:
        '200':
          description: Successfully stored service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service_Service'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '409':
          description: Resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/teams/{teamId}/services/{serviceId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/serviceParams'
    get:
      operationId: getService
      description: Get a service from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service_Service'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    put:
      operationId: editService
      description: Edit a service from a given team
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_Service'
        description: Service object that contains updated values
        required: true
      responses:
        '200':
          description: Successfully edited service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service_Service'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    delete:
      operationId: deleteService
      description: Delete a service from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully deleted a service
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/teams/{teamId}/secrets':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getSecrets
      description: Get secrets from a given team
      x-aclSchema: Secrets
      responses:
        '200':
          description: Successfully obtained secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secrets_Secrets'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
    post:
      operationId: createSecret
      description: Create a team secret
      x-aclSchema: Secret
      parameters:
        - name: teamId
          in: path
          description: ID of team
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secret_Secret'
        description: Service object
        required: true
      responses:
        '200':
          description: Successfully stored secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret_Secret'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '409':
          description: Resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/teams/{teamId}/secrets/{secretId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/secretParams'
    get:
      operationId: getSecret
      description: Get a secret from a given team
      x-aclSchema: Secret
      responses:
        '200':
          description: Successfully obtained secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret_Secret'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    put:
      operationId: editSecret
      description: Edit a secret from a given team
      x-aclSchema: Secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secret_Secret'
        description: Secret object that contains updated values
        required: true
      responses:
        '200':
          description: Successfully edited a team secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret_Secret'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
    delete:
      operationId: deleteSecret
      description: Delete a secret from a given team
      x-aclSchema: Secret
      responses:
        '200':
          description: Successfully deleted a team secret
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  /deploy:
    get:
      x-aclSchema: Deployment
      operationId: deploy
      description: Trigger a deployment (only for admin)
      responses:
        '202':
          description: Deployment has been triggered
          content:
            application/json:
              schema:
                type: object
        '409':
          description: Resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  '/kubecfg/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: downloadKubecfg
      description: Download a kubecfg for a team
      x-aclSchema: Kubecfg
      responses:
        '200':
          description: Succesfully finished the download
          content:
            application/yaml:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
  /session:
    get:
      security: []
      operationId: getSession
      description: Get the session for the current user
      responses:
        '200':
          description: Get the session for the logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_Session'
        default:
          description: The requested session.
  /apiDocs:
    get:
      operationId: apiDocs
      security: []
      description: Get OpenAPIDoc document
      responses:
        '200':
          description: The requested apiDoc.
          content:
            application/json:
              schema:
                type: object
        default:
          description: The requested apiDoc.
  /settings:
    get:
      operationId: getSettings
      description: Get settings from the `settings.yaml` and `secret.settings.yaml` file.
      x-aclSchema: Settings
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settings_Settings'
    put:
      operationId: editSettings
      description: Edits the settings from the `settings.yaml` file
      x-aclSchema: Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settings_Settings'
        description: Settings object that contains updated values
        required: true
      responses:
        '200':
          description: Successfully edited `settings.yaml`
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OpenApiValidationError'
        '404':
          description: Resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_OtomiStackError'
servers:
  - url: /v1
components:
  parameters:
    teamParams:
      name: teamId
      in: path
      description: ID of team to return
      required: true
      schema:
        type: string
    serviceParams:
      name: serviceId
      in: path
      description: ID of the service
      required: true
      schema:
        type: string
    secretParams:
      name: secretId
      in: path
      description: ID of the secret
      required: true
      schema:
        type: string
  securitySchemes:
    groupAuthn:
      type: apiKey
      name: Authorization
      in: header
    groupAuthz:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Cloud:
      $ref: '#/components/schemas/cloud_Cloud'
    Cluster:
      $ref: '#/components/schemas/cluster_Cluster'
    Clusters:
      $ref: '#/components/schemas/clusters_Clusters'
    Deployment:
      $ref: '#/components/schemas/deployment_Deployment'
    Kubecfg:
      $ref: '#/components/schemas/kubecfg_Kubecfg'
    OpenApiValidationError:
      $ref: '#/components/schemas/error_OpenApiValidationError'
    OtomiStackError:
      $ref: '#/components/schemas/error_OtomiStackError'
    Secret:
      $ref: '#/components/schemas/secret_Secret'
    Secrets:
      $ref: '#/components/schemas/secrets_Secrets'
    Service:
      $ref: '#/components/schemas/service_Service'
    Services:
      $ref: '#/components/schemas/services_Services'
    Session:
      $ref: '#/components/schemas/session_Session'
    Settings:
      $ref: '#/components/schemas/settings_Settings'
    Team:
      $ref: '#/components/schemas/team_Team'
    Teams:
      $ref: '#/components/schemas/teams_Teams'
    User:
      $ref: '#/components/schemas/user_User'
    cluster_Cluster:
      x-acl:
        admin:
          - read-any
        team:
          - read-any
      properties:
        enabled:
          type: boolean
          default: true
        name:
          type: string
          description: A cluster name
          readOnly: true
        cloud:
          type: string
          description: A cloud provider name
          readOnly: true
        domain:
          type: string
          description: A default cluster DNS zone
          readOnly: true
        dnsZones:
          type: array
          description: A list of DNS zones that are available to the cluster
          items:
            type: string
          readOnly: true
          uniqueItems: true
        hasKnative:
          description: >-
            A flag that indicates capability for deploying serverless services
            by using Knative
          type: boolean
          readOnly: true
        k8sVersion:
          description: A version of kubernetes that is installed on the cluster
          type: string
          readOnly: true
        otomiVersion:
          description: A version of kubernetes that is installed on the cluster
          type: string
          readOnly: true
        region:
          description: A physical location of the cluster
          type: string
          readOnly: true
        clusterId:
          description: An unique cluster identifier
          type: string
          readOnly: true
    clusters_Clusters:
      items:
        $ref: '#/components/schemas/cluster_Cluster'
      type: array
      x-acl:
        admin:
          - read-any
        team:
          - read-any
    secret_Secret:
      x-acl:
        admin:
          - read-any
          - create-any
          - update-any
          - delete-any
        team:
          - read
          - create
          - update
          - delete
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
          title: Name
          description: A secret name
          example: secret01
        clusterId:
          x-acl:
            admin:
              - read
              - create
            team:
              - read
              - create
          title: Cluster ID
          type: string
          description: A kubernetes cluster for the secret
      required:
        - name
        - clusterId
      oneOf:
        - title: Generic
          properties:
            type:
              default: generic
              enum:
                - generic
            entries:
              type: array
              items:
                description: A property name at vaultPath
                minItems: 1
                pattern: '^[a-zA-Z0-9_]*$'
                type: string
                uniqueItems: true
          required:
            - type
            - entries
        - title: Docker registry
          properties:
            type:
              default: docker-registry
              enum:
                - docker-registry
              type: string
            dockerconfig:
              type: string
              enum:
                - .dockerconfig.json
              default: .dockerconfig.json
              readOnly: true
          required:
            - type
        - title: TLS
          properties:
            type:
              default: tls
              enum:
                - tls
              type: string
            crt:
              type: string
              default: tls.crt
              description: A Vault property name that contains PEM public key certificate
            key:
              type: string
              default: tls.key
              description: A Vault property name that contains PEM private key certificate
            ca:
              type: string
              title: CA
              description: A Vault property name that contains CA certificate content
          required:
            - type
            - crt
            - key
    secrets_Secrets:
      items:
        $ref: '#/components/schemas/secret_Secret'
      type: array
      x-acl:
        admin:
          - read-any
        team:
          - read-any
    error_OpenApiValidationError:
      x-acl: []
      properties:
        status:
          type: integer
        errors:
          type: array
          items:
            x-acl: []
            properties:
              path:
                type: string
              errorCode:
                type: string
              message:
                type: string
              location:
                type: string
                enum:
                  - body
                  - path
    idName:
      description: A lowercase name that starts with a letter and may contain dashes.
      pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
      type: string
    repository:
      description: A container image repository.
      pattern: '^[a-z0-9]+(?:[/._-]{1,2}[a-z0-9]+)*$'
      type: string
    env:
      additionalProperties: false
      nullable: true
      x-patternProperties:
        '[a-zA-Z_]{1,}[a-zA-Z0-9_]*':
          maxLength: 131072
          type: string
      title: Environment variables
    cpuQuantity:
      description: 'Amount of cores, or slice of cpu in millis.'
      example:
        - '1'
        - 200m
      pattern: '^([0-9]+\.[0-9]{1,2})|([0-9]{2,3}m)?$'
      type: string
    memoryQuantity:
      description: Amount of memory. Valid units are E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki.
      example:
        - 1Mi
        - 0.5M
      pattern: '^([0-9]+\.)?[0-9]+(E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)?$'
      type: string
    labelsAnnotations:
      additionalProperties: false
      x-patternProperties:
        ? '^((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]){1,253}\/)?([a-z0-9A-Z]+[a-z0-9A-Z-_.]+[a-z0-9A-Z]){1,63}$'
        : pattern: '^((.){1,253}\/)?(.){1,63}$'
          type: string
    domain:
      pattern: >-
        ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
      type: string
    service_Service:
      x-externalDocsPath: docs/configuring-services
      x-acl:
        admin:
          - delete-any
          - read-any
          - create-any
          - update-any
        team:
          - delete
          - read
          - create
          - update
      properties:
        enabled:
          type: boolean
          default: true
        id:
          type: string
          readOnly: true
        name:
          $ref: '#/components/schemas/idName'
          title: Name
          description: A service name
          example: some-service
        port:
          description: A service port
          type: integer
          default: 80
          minimum: 1
          maximum: 65535
        clusterId:
          title: Cluster ID
          type: string
          description: A kubernetes cluster for the service
          x-acl:
            admin:
              - read
              - create
            team:
              - read
              - create
        ksvc:
          title: Type
          oneOf:
            - title: Knative service
              nullable: true
              properties:
                serviceType:
                  type: string
                  enum:
                    - ksvc
                  default: ksvc
                scaleToZero:
                  title: Scale to zero
                  description: >-
                    Scales to zero after 60 seconds and needs approximately 8
                    seconds to start back up.
                  type: boolean
                  default: false
                image:
                  title: Container image
                  nullable: true
                  properties:
                    repository:
                      $ref: '#/components/schemas/repository'
                    tag:
                      type: string
                secrets:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                      entries:
                        title: Entries
                        type: array
                        items:
                          type: string
                        uniqueItems: true
                    required:
                      - name
                  required:
                    - repository
                    - tag
                env:
                  title: Environment variables
                  type: array
                  nullable: true
                  items:
                    properties:
                      name:
                        $ref: '#/components/schemas/env'
                      value:
                        type: string
                        maxLength: 131072
                    required:
                      - name
                      - value
                resources:
                  title: Pod resources
                  nullable: true
                  properties:
                    requests:
                      properties:
                        cpu:
                          description: The guaranteed amount of CPU
                          $ref: '#/components/schemas/cpuQuantity'
                          default: 50m
                        memory:
                          description: The guaranteed amount of RAM
                          $ref: '#/components/schemas/memoryQuantity'
                          default: 64Mi
                      required:
                        - cpu
                        - memory
                    limits:
                      properties:
                        cpu:
                          description: The maximum amount of CPU
                          $ref: '#/components/schemas/cpuQuantity'
                          default: 100m
                        memory:
                          description: The maximum amount of RAM
                          $ref: '#/components/schemas/memoryQuantity'
                          default: 128Mi
                      required:
                        - cpu
                        - memory
                annotations:
                  title: Pod annotations
                  $ref: '#/components/schemas/labelsAnnotations'
                autoCD:
                  title: Continuous delivery
                  description: Deploys new images based on a tagging strategy
                  oneOf:
                    - title: 'Off'
                      nullable: true
                      additionalProperties: false
                    - title: Semver versioning
                      nullable: true
                      properties:
                        tagMatcher:
                          type: string
                          enum:
                            - semver
                          default: semver
                        semver:
                          title: Semver version pattern
                          type: string
                          example: >-
                            PATCH only: "~1.1", MINOR and PATCH only "~1", ALL
                            "*",  ">=1.2.3-0"
                          description: >-
                            Use this filter if your image tags follow semantic
                            versioning rules (MAJOR.MINOR.PATCH). E.g.: PATCH
                            only: "~1.1", MINOR and PATCH only "~1", ALL "*"
                      required:
                        - semver
                    - title: Glob pattern matching
                      properties:
                        tagMatcher:
                          type: string
                          enum:
                            - glob
                          default: glob
                        glob:
                          title: Glob string pattern
                          type: string
                          description: >-
                            Use this filter if you want to make glob-style
                            patterns. E.g.: "main-v1.3.*"
                          example: main-v1.3.*
                      required:
                        - glob
                      additionalProperties: false
            - title: Existing Knative service
              properties:
                serviceType:
                  type: string
                  enum:
                    - ksvcPredeployed
                  default: ksvcPredeployed
              required:
                - serviceType
            - title: Existing Kubernetes service
              properties:
                serviceType:
                  type: string
                  enum:
                    - svcPredeployed
                  default: svcPredeployed
              required:
                - serviceType
        ingress:
          title: Exposure
          x-acl:
            team:
              - read
          oneOf:
            - title: Private
              nullable: true
              additionalProperties: false
            - title: Public URL
              nullable: true
              properties:
                useDefaultSubdomain:
                  title: Use team domain (preferred)
                  type: boolean
                  default: true
                  description: Use the team domain so that the URL reveals the owner.
                subdomain:
                  title: Host
                  type: string
                  nullable: true
                  description: A host that is used to set DNS 'A' records
                  $ref: '#/components/schemas/domain'
                domain:
                  title: DNS Zone
                  description: A managed DNS zone
                  type: string
                path:
                  title: URL path
                  description: >-
                    The path in the URL that the service should be mapped to
                    (e.g. for microservices on one app/domain.)
                  type: string
                forwardPath:
                  title: Forward path
                  description: Forward the URL path into the service (don't rewrite to /)
                  type: boolean
                hasSingleSignOn:
                  title: Authenticate with Single Sign On
                  type: boolean
                  default: false
                hasCert:
                  title: Already has a certificate
                  type: boolean
                  default: false
                  description: If true a certificate should exist already
                certArn:
                  type: string
                  title: Certificate ARN
                  example: 'arn:aws:acm:eu-central-1:xxx:certificate/xxx'
                certSelect:
                  type: boolean
                  title: Select existing secret name
                  default: true
                certName:
                  type: string
                  title: Secret name
                  example: www-example-com
              required:
                - domain
                - subdomain
        teamId:
          type: string
          readOnly: true
      required:
        - name
        - clusterId
        - teamId
    services_Services:
      items:
        $ref: '#/components/schemas/service_Service'
      type: array
      x-acl:
        admin:
          - read-any
        team:
          - read-any
    azureMonitor:
      properties:
        appInsightsApiKey:
          description: An Azure AppInsights client secret (defaults to clientSecret).
          type: string
        appInsightsAppId:
          description: An Azure AppInsights client id (defaults to clientId).
          type: string
        clientId:
          description: An Azure client id.
          type: string
        clientSecret:
          description: An Azure client secret.
          type: string
        logAnalyticsClientId:
          description: An Azure client secret (defaults to clientSecret).
          type: string
        logAnalyticsClientSecret:
          description: An Azure client secret (defaults to clientSecret).
          type: string
        logAnalyticsTenantId:
          description: An Azure tenant id (defaults to tenantId).
          type: string
        logAnalyticsWorkspace:
          description: An Azure monitor log analytics workspace.
          type: string
    team_Team:
      x-externalDocsPath: docs/configuring-teams
      x-acl:
        admin:
          - delete-any
          - read-any
          - create-any
          - update-any
        team:
          - read-any
          - update
      properties:
        id:
          title: ID
          $ref: '#/components/schemas/idName'
          x-acl:
            admin:
              - read
            team:
              - read
        name:
          title: Name
          $ref: '#/components/schemas/idName'
          example: otomi
          x-acl:
            admin:
              - create
              - read
            team:
              - read
          description: A team name
        clusters:
          title: Clusters
          type: array
          items:
            type: string
          uniqueItems: true
          minItems: 1
          x-acl:
            team:
              - read
        oidc:
          title: OIDC
          properties:
            groupMapping:
              title: Group mapping
              type: string
              description: An OIDC group name/id granting access to this team
        password:
          type: string
          writeOnly: true
        alerts:
          title: Alerting endpoints
          properties:
            receivers:
              title: Receivers
              type: array
              items:
                type: string
                enum:
                  - slack
                  - msteams
                  - email
              uniqueItems: true
            slack:
              title: Slack
              properties:
                url:
                  title: Web hook
                  type: string
                  description: Slack web hook. If none is given the global one is used.
                channel:
                  title: Channel for non-criticals
                  type: string
                  description: >-
                    Slack channel for non-criticals. If none is given the global
                    one is used, which defaults to 'mon-otomi'.
                channelCrit:
                  title: Channel for criticals
                  type: string
                  description: >-
                    Slack channel for critical alerts. If none is given the
                    global one is used, which defaults to 'mon-otomi-crit'.
            msteams:
              title: Microsoft Teams
              properties:
                lowPrio:
                  title: Low prio webhook
                  type: string
                  description: The low prio web hook
                highPrio:
                  title: High prio webhook
                  type: string
                  description: The high prio web hook
            email:
              title: Email
              properties:
                nonCritical:
                  title: Non criticals
                  type: string
                  description: >-
                    One or more email addresses (comma separated) for
                    non-critical events.
                critical:
                  title: Criticals
                  type: string
                  description: Email addresses (comma separated) for critical events.
        azureMonitor:
          $ref: '#/components/schemas/azureMonitor'
      required:
        - name
        - clusters
        - password
    teams_Teams:
      items:
        $ref: '#/components/schemas/team_Team'
      type: array
      x-acl:
        admin:
          - read-any
        team:
          - read-any
    error_OtomiStackError:
      x-acl: []
      properties:
        message:
          type: string
    email:
      pattern: >-
        ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
      type: string
    user_User:
      readOnly: true
      x-acl:
        admin: []
        team: []
      properties:
        name:
          type: string
          description: A user name
          readOnly: true
        email:
          $ref: '#/components/schemas/email'
        isAdmin:
          type: boolean
          default: false
          description: If the user is admin
          readOnly: true
        teams:
          type: array
          default: []
          description: A list of teams the user belongs to
          items:
            type: string
          readOnly: true
          uniqueItems: true
        roles:
          type: array
          default: []
          description: A list of roles that the user has
          items:
            type: string
          readOnly: true
          uniqueItems: true
      required:
        - isAdmin
        - name
        - email
        - teams
        - roles
    session_Session:
      x-acl:
        admin:
          - read
        team:
          - read
      properties:
        clusters:
          readOnly: true
          type: array
          items:
            type: string
          uniqueItems: true
        core:
          readOnly: true
        currentClusterId:
          type: string
          readOnly: true
        isDirty:
          type: boolean
          readOnly: true
        namespaces:
          readOnly: true
          type: array
          items:
            type: string
        teams:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/team_Team'
        user:
          $ref: '#/components/schemas/user_User'
    url:
      pattern: >-
        ^(https:\/\/)([\w\-])+\.{1}([a-zA-Z]{2,63})([\/\w-]*)*\/?\??([^#\n\r]*)?#?([^\n\r]*)$
      type: string
    alerts:
      properties:
        drone:
          default: slack
          enum:
            - slack
            - msteams
          type: string
        email:
          additionalProperties: false
          properties:
            critical:
              $ref: '#/components/schemas/email'
              description: >-
                One or more email addresses (comma separated) for critical
                events.
            nonCritical:
              $ref: '#/components/schemas/email'
              description: >-
                One or more email addresses (comma separated) for non-critical
                events.
        groupInterval:
          default: 5m
          description: >-
            How long to wait before sending a notification about new alerts that
            are added to a group of alerts for which an initial notification has
            already been sent. (Usually ~5m or more.)
          type: string
        msteams:
          additionalProperties: false
          properties:
            highPrio:
              description: The low prio web hook.
              type: string
            lowPrio:
              description: The high prio web hook.
              type: string
        receivers:
          description: Notification receivers.
          items:
            enum:
              - slack
              - msteams
              - email
            type: string
          type: array
        repeatInterval:
          default: 3h
          description: >-
            How long to wait before sending a notification again if it has
            already been sent successfully for an alert. (Usually ~3h or more).
          type: string
        slack:
          additionalProperties: false
          properties:
            channel:
              default: mon-otomi
              description: The Slack channel for non-critical notifications.
              type: string
            channelCrit:
              default: mon-otomi
              description: The Slack channel for critical notifications.
              type: string
            url:
              $ref: '#/components/schemas/url'
              description: A Slack webhook URL.
    hostPort:
      pattern: >-
        ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]):()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
      type: string
    settings_Settings:
      x-acl:
        admin:
          - read-any
          - update-any
        team: []
      additionalProperties: false
      properties:
        alerts:
          $ref: '#/components/schemas/alerts'
        azure:
          description: Azure specific configuration.
          properties:
            appgw:
              properties:
                isManaged:
                  default: true
                  description: Is this appgw installed as AKS addon?
                  type: boolean
            diskType:
              description: An Azure disk type (SKU Type).
              enum:
                - Standard_LRS
                - Standard_GRS
                - Standard_RAGRS
                - Standard_ZRS
                - Premium_LRS
                - Premium_ZRS
                - Standard_GZRS
                - Standard_RAGZRS
              type: string
            keyVault:
              description: >-
                Azure Key Vault access credentials. Will use azure.tenantId if
                tenantId is not provided.
              properties:
                tenantId:
                  description: An Azure tenant ID.
                  type: string
                clientId:
                  description: An Azure client ID.
                  type: string
                clientSecret:
                  description: An Azure client secret.
                  type: string
              required:
                - clientId
                - clientSecret
            monitor:
              $ref: '#/components/schemas/azureMonitor'
            resourceGroup:
              description: An Azure resource group.
              type: string
            subscriptionId:
              description: An Azure subscription ID.
              type: string
            tenantId:
              description: An Azure tenant ID.
              type: string
          required:
            - diskType
            - resourceGroup
            - subscriptionId
            - tenantId
        customer:
          additionalProperties: false
          properties:
            name:
              type: string
        google:
          description: Google specific configuration.
          properties:
            cloudDnsKey:
              description: A service account key for managing a DNS zone.
              type: string
            kmsAccount:
              description: A service account key for managing a KMS vault.
              type: string
            projectId:
              description: A Google Cloud project ID for accessing DNS zone.
              type: string
          required:
            - cloudDnsKey
            - projectId
        home:
          $ref: '#/components/schemas/alerts'
        kms:
          description: Use Cloud KMS to encrypt and decrypt the master key
          oneOf:
            - title: gcpckms
              properties:
                gcpckms:
                  properties:
                    project:
                      type: string
                    region:
                      type: string
                    key_ring:
                      type: string
                    kmsAccount:
                      type: string
                  required:
                    - project
                    - region
                    - key_ring
                    - kmsAccount
              required:
                - gcpckms
            - title: awskms
              properties:
                awskms:
                  properties:
                    region:
                      type: string
                    access_key:
                      type: string
                    secret_key:
                      type: string
                    endpoint:
                      type: string
                  required:
                    - region
                    - access_key
                    - secret_key
                    - endpoint
              required:
                - awskms
            - title: azurekeyvault
              properties:
                azurekeyvault:
                  properties:
                    vault_name:
                      type: string
                    tenant_id:
                      type: string
                    client_id:
                      type: string
                    client_secret:
                      type: string
                  required:
                    - vault_name
                    - tenant_id
                    - client_id
                    - client_secret
              required:
                - azurekeyvault
        oidc:
          additionalProperties: false
          description: >-
            Holds many parts used in different locations. Please see keycloak,
            istio and oauth-proxy all consuming parts.
          properties:
            adminGroupID:
              type: string
            apiUrl:
              $ref: '#/components/schemas/url'
            authUrl:
              $ref: '#/components/schemas/url'
            clientID:
              type: string
            clientSecret:
              type: string
            issuer:
              $ref: '#/components/schemas/url'
            scope:
              type: string
            teamAdminGroupID:
              type: string
            tenantID:
              type: string
            tokenUrl:
              $ref: '#/components/schemas/url'
            usernameClaimMapper:
              type: string
              description: >-
                Claim name used by Keycloak to identify incoming users from
                identity provider
            subClaimMapper:
              type: string
              description: Select OIDC claim to be used as a unique user identifier
              default: sub
        otomi:
          additionalProperties: false
          properties:
            hasCloudLB:
              default: false
              description: >-
                Set this to true when an external LB exists or needs to be
                started (AWS ALB, Azure AppGW, Google Apigee). This will then be
                configured through ingress controllers. Expects existing LBs to
                terminate https. Currently this is only working correctly for
                Azure, and not for AWS and Google. AWS is close to completion.
              type: boolean
            isHomeMonitored:
              default: false
              description: >-
                Whether this cluster is home monitored (like when under a
                Premium SLA). Sends criticals home.
              type: boolean
            isManaged:
              default: true
              description: >-
                Whether masters are managed and not under control. Set this to
                false when onprem.
              type: boolean
            isMultitenant:
              default: true
              description: >-
                Whether to separate team metrics and logs. Disabling this lets
                everybody be admin and see everything.
              type: boolean
            mode:
              default: ee
              description: >-
                The otomi-core edition. Either community edition (ce) or
                enterprise edition (ee).
              enum:
                - ce
                - ee
              type: string
            pullSecret:
              default: ''
              description: >-
                The pullsecret to deploy the Otomi API and Console. Requires an
                Otomi license.
              type: string
            teamPrefix:
              default: team-
              description: The prefix to use in URLs for team domains.
              pattern: '^[a-z]+[-]{1}$'
              type: string
            addons:
              description: Manage addon configuration
              additionalProperties: false
              properties:
                conftest:
                  properties:
                    enabled:
                      type: boolean
                      default: true
                      description: Use this flag to enable conftest for policy validation
        smtp:
          additionalProperties: false
          properties:
            auth_identity:
              type: string
            auth_password:
              type: string
            auth_secret:
              type: string
            auth_username:
              type: string
            from:
              $ref: '#/components/schemas/email'
              description: The "from" address. Defaults to alerts@$clusterDomain.
            hello:
              type: string
            smarthost:
              $ref: '#/components/schemas/hostPort'
              description: 'The smtp host:port combination.'
          required:
            - smarthost
    cloud_Cloud:
      x-acl:
        admin:
          - read-any
        team:
          - read-any
      properties:
        name:
          type: string
          description: A cluster name
          readOnly: true
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/cluster_Cluster'
        domain:
          type: string
          description: A fqdn for the cloud
    deployment_Deployment:
      x-externalDocsPath: docs/deployment
      x-acl:
        admin:
          - read-any
        team:
          - read-any
      properties:
        id:
          type: integer
        status:
          type: string
          readOnly: true
          description: Deployment status
          enum:
            - in-progress
            - completed
            - failed
    kubecfg_Kubecfg:
      x-acl:
        admin:
          - read-any
        team:
          - read
      properties: {}
