openapi: '3.0.0'
security:
  - groupAuthz: []
info:
  title: The APL API
  description: Holds the entire schema of the application platform API
  version: 2.0.0b1

externalDocs:
  description: 'This is the base url of the external documentation'
  url: https://apl-docs.net/ #Using this URL a final docUrl can be made using this+info.version+ the component's x-externalDocsPath

x-responses:
  BadRequest: &BadRequest
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OpenApiValidationError'

  OtomiStackError: &OtomiStackError
    description: Resource already exists
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OtomiStackError'

  NotFound: &NotFound
    description: Resource does not exist
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OtomiStackError'

x-post-responses: &DefaultPostResponses
  '400':
    <<: *BadRequest
  '409':
    <<: *OtomiStackError

x-get-responses: &DefaultGetResponses
  '400':
    <<: *BadRequest
  '404':
    <<: *NotFound

# -------------------------------------------- Paths
paths:
  /otomi/values:
    get:
      operationId: getValues
      description: Get otomi values
      x-aclSchema: OtomiCliValues
      parameters:
        - name: filesOnly
          in: query
          description: IDs of settings to return
          schema:
            type: string
            enum: ['true', 'false']
        - name: excludeSecrets
          in: query
          schema:
            type: string
            enum: ['true', 'false']
        - name: withWorkloadValues
          in: query
          schema:
            type: string
            enum: ['true', 'false']
      responses:
        '200':
          description: Successfully obtained otomi values
          content:
            application/yaml:
              schema:
                $ref: '#/components/schemas/OtomiCliValues'

  /teams:
    get:
      operationId: getTeams
      description: Get teams collection
      x-aclSchema: Team
      responses:
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplTeamSettingsResponse'
    post:
      operationId: createTeam
      description: Create a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplTeamSettingsRequest'
        description: Team object that needs to be added to the collection
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplTeamSettingsResponse'
  '/teams/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeam
      description: Get a specific team
      x-aclSchema: Team
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplTeamSettingsResponse'

    put:
      operationId: editTeam
      description: Edit a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplTeamSettingsRequest'
        description: Team object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplTeamSettingsResponse'
    delete:
      operationId: deleteTeam
      description: Delete team
      x-aclSchema: Team
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team

  /services:
    get:
      operationId: getAllServices
      description: Get all services running on the cluster
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained all services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplServiceResponse'
        '400':
          <<: *BadRequest

  '/teams/{teamId}/services':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamServices
      description: Get services from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplServiceResponse'
        '400':
          <<: *BadRequest

    post:
      operationId: createService
      description: Create a service
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplServiceRequest'
        description: Service object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'
  '/teams/{teamId}/services/{serviceId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/serviceParams'
    get:
      operationId: getService
      description: Get a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'
    put:
      operationId: editService
      description: Edit a service from a given team
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplServiceRequest'
        description: Service object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'
    delete:
      operationId: deleteService
      description: Delete a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a service

  /sealedsecretskeys:
    get:
      operationId: downloadSealedSecretKeys
      description: Download sealed secret keys
      x-aclSchema: SealedSecretsKeys
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully downloaded sealed secret keys
          content:
            application/key:
              schema:
                $ref: '#/components/schemas/SealedSecretsKeys'
        '400':
          <<: *BadRequest

  /secrets:
    get:
      operationId: getAllSecrets
      description: Get all secrets
      x-aclSchema: Secret
      responses:
        '200':
          description: Successfully obtained all secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplSecretResponse'
        '400':
          <<: *BadRequest

  '/teams/{teamId}/secrets':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getSealedSecrets
      description: Get sealed secrets from a given team
      x-aclSchema: SealedSecret
      responses:
        '200':
          description: Successfully obtained sealed secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplSecretResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createSealedSecret
      description: Create a team sealed secret
      x-aclSchema: SealedSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplSecretRequest'
        description: SealedSecret object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'

  '/teams/{teamId}/secrets/{secretId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/secretParams'
    get:
      operationId: getSealedSecret
      description: Get a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'
    put:
      operationId: editSealedSecret
      description: Edit a sealed secret from a given team
      x-aclSchema: SealedSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplSecretRequest'
        description: SealedSecret object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team sealed secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'
    delete:
      operationId: deleteSealedSecret
      description: Delete a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team sealed secret

  '/netpols':
    get:
      operationId: getAllNetpols
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplNetpolResponse'

  '/teams/{teamId}/netpols':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamNetpols
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplNetpolResponse'
    post:
      operationId: createNetpol
      description: Create a team network policy
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplNetpolRequest'
        description: Network policy object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'

  '/teams/{teamId}/netpols/{netpolId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/netpolParams'
    get:
      operationId: getNetpol
      description: Get a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'
    put:
      operationId: editNetpol
      description: Edit a network policy from a given team
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplNetpolRequest'
        description: Netwok policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team network policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'
    delete:
      operationId: deleteNetpol
      description: Delete a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team network policy

  '/backups':
    get:
      operationId: getAllBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBackupResponse'

  '/teams/{teamId}/backups':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBackupResponse'
    post:
      operationId: createBackup
      description: Create a team backup
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBackupRequest'
        description: Backup object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'

  '/teams/{teamId}/backups/{backupId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/backupParams'
    delete:
      operationId: deleteBackup
      description: Delete a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a backup
    get:
      operationId: getBackup
      description: Get a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'
    put:
      operationId: editBackup
      description: Edit a backup from a given team
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBackupRequest'
        description: Backup object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'

  '/teams/{teamId}/dashboard':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getDashboard
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained dashboard inventory data
          content:
            application/json:
              schema:
                type: object

  '/builds':
    get:
      operationId: getAllBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBuildResponse'

  '/teams/{teamId}/builds':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBuildResponse'
    post:
      operationId: createBuild
      description: Create a team build
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBuildRequest'
        description: Build object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'

  '/teams/{teamId}/builds/{buildId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/buildParams'
    delete:
      operationId: deleteBuild
      description: Delete a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a build
    get:
      operationId: getBuild
      description: Get a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'
    put:
      operationId: editBuild
      description: Edit a build from a given team
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBuildRequest'
        description: Build object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'

  '/policies':
    get:
      operationId: getAllPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'

  '/teams/{teamId}/policies':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'

  '/teams/{teamId}/policies/{policyId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/policyParams'
    get:
      operationId: getPolicy
      description: Get a policy from a given team
      x-aclSchema: Policy
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'
    put:
      operationId: editPolicy
      description: Edit a policy from a given team
      x-aclSchema: Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplPolicyRequest'
        description: Policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'

  '/k8sVersion':
    get:
      operationId: getK8sVersion
      description: Get cluster k8s version
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully obtained k8s version
          content:
            application/json:
              schema:
                type: string

  '/cloudtty':
    post:
      operationId: connectCloudtty
      description: Create a cloudtty url
      x-aclSchema: Cloudtty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloudtty'
        description: Cloudtty object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored cloudtty configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloudtty'
    delete:
      operationId: deleteCloudtty
      description: Delete cloudtty url
      x-aclSchema: Cloudtty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloudtty'
        description: Cloudtty object
        required: true
      responses:
        '200':
          description: Successfully removed cloudtty url

  '/users':
    get:
      operationId: getAllUsers
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all users configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplUserResponse'
    post:
      operationId: createUser
      description: Create a team user
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplUserRequest'
        description: User object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored user configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplUserResponse'

  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userParams'
    get:
      operationId: getUser
      description: Get a user from a given team
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained user configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplUserResponse'
    put:
      operationId: editUser
      description: Edit a user from a given team
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplUserRequest'
        description: User object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplUserResponse'
    delete:
      operationId: deleteUser
      description: Delete a user from a given team
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a user

  '/teams/{teamId}/users':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    put:
      operationId: editTeamUsers
      description: Edit a user from a given team
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  id:
                    $ref: '#/components/schemas/User/properties/id'
                  email:
                    $ref: '#/components/schemas/User/properties/email'
                  isPlatformAdmin:
                    $ref: '#/components/schemas/User/properties/isPlatformAdmin'
                  isTeamAdmin:
                    $ref: '#/components/schemas/User/properties/isTeamAdmin'
                  teams:
                    $ref: '#/components/schemas/User/properties/teams'
        description: User object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplUserResponse'

  '/projects':
    get:
      operationId: getAllProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplProjectResponse'

  '/teams/{teamId}/projects':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplProjectResponse'
    post:
      operationId: createProject
      description: Create a team project
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplProjectRequest'
        description: Project object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'

  '/teams/{teamId}/projects/{projectId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/projectParams'
    delete:
      operationId: deleteProject
      description: Delete a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a project
    get:
      operationId: getProject
      description: Get a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'
    put:
      operationId: editProject
      description: Edit a project from a given team
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplProjectRequest'
        description: Project object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'

  /coderepos:
    get:
      operationId: getAllCodeRepos
      description: Get all code repositories
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained all code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplCodeRepoResponse'
        '400':
          <<: *BadRequest

  '/teams/{teamId}/coderepos':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamCodeRepos
      description: Get code repos from a given team
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplCodeRepoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createCodeRepo
      description: Create a team code repo
      x-aclSchema: CodeRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplCodeRepoRequest'
        description: CodeRepo object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'

  '/teams/{teamId}/coderepos/{coderepoId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/coderepoParams'
    get:
      operationId: getCodeRepo
      description: Get a code repo from a given team
      x-aclSchema: Coderepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'
    put:
      operationId: editCodeRepo
      description: Edit a code repo from a given team
      x-aclSchema: CodeRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplCodeRepoRequest'
        description: CodeRepo object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team code repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'
    delete:
      operationId: deleteCodeRepo
      description: Delete a code repo from a given team
      x-aclSchema: CodeRepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team code repo

  '/workloads':
    get:
      operationId: getAllWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplWorkloadResponse'

  '/workloadCatalog':
    post:
      operationId: workloadCatalog
      description: Get workload catalog from a repository
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully retrieved workload catalog
          content:
            application/json:
              schema:
                type: object

  '/teams/{teamId}/workloads':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplWorkloadResponse'
    post:
      operationId: createWorkload
      description: Create a team workload
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplWorkloadRequest'
        description: Workload object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'

  '/teams/{teamId}/workloads/{workloadId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/workloadParams'
    delete:
      operationId: deleteWorkload
      description: Delete a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a workload
    get:
      operationId: getWorkload
      description: Get a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'
    put:
      operationId: editWorkload
      description: Edit a workload from a given team
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplWorkloadRequest'
        description: Workload object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team workload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'

  '/kubecfg/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: downloadKubecfg
      description: Download a kubecfg for a team
      x-aclSchema: Kubecfg
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Succesfully finished the download
          content:
            'application/yaml':
              schema:
                $ref: '#/components/schemas/Kubecfg'

  '/dockerconfig/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: downloadDockerConfig
      description: Download Docker login creds for a team
      x-aclSchema: DockerConfig
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Succesfully finished the download
          content:
            'application/yaml':
              schema:
                $ref: '#/components/schemas/DockerConfig'

  /session:
    get:
      operationId: getSession
      description: Get the session for the current user
      responses:
        '200':
          description: Get the session for the logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        default:
          description: The requested session.
  /apiDocs:
    get:
      operationId: 'apiDocs'
      security: []
      description: Get OpenAPIDoc document
      responses:
        '200':
          description: The requested apiDoc.
          content:
            application/json:
              schema:
                type: object
        default:
          description: The requested apiDoc.

  /settingsInfo:
    get:
      operationId: getSettingsInfo
      description: Get settings information from the 'settings.yaml' file.
      x-aclSchema: SettingsInfo
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfo'

  /testRepoConnect:
    get:
      operationId: getTestRepoConnect
      description: Get settings information from the 'settings.yaml' file.
      x-aclSchema: TestRepoConnect
      parameters:
        - name: url
          in: query
          description: URL of the repository
          schema:
            type: string
        - name: teamId
          in: query
          description: Id of the team
          schema:
            type: string
        - name: secret
          in: query
          description: Name of the secret for private repositories
          schema:
            type: string
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRepoConnect'

  /internalRepoUrls:
    get:
      operationId: getInternalRepoUrls
      x-aclSchema: InternalRepoUrls
      parameters:
        - name: teamId
          in: query
          description: ID of the team
          schema:
            type: string
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained internal repo urls
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  '/objwizard':
    post:
      operationId: createObjWizard
      description: Create a obj wizard configuration
      x-aclSchema: ObjWizard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjWizard'
        description: ObjWizard object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully configured obj wizard configuration
          content:
            application/json:
              schema:
                type: object

  /settings:
    get:
      operationId: getSettings
      description: Get settings from the 'settings.yaml' or 'secret.settings.yaml' file.
      x-aclSchema: Settings
      parameters:
        - name: ids
          in: query
          description: IDs of settings to return
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'

  '/settings/{settingId}':
    parameters:
      - $ref: '#/components/parameters/settingsParams'
    put:
      operationId: editSettings
      description: Edit settings from the 'settings.yaml' or 'secret.settings.yaml' file.
      x-aclSchema: Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        description: Put new settings.
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited settings.

  /apps/{teamId}:
    parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
    get:
      operationId: getApps
      description: Get list of apps for a team
      x-aclSchema: App
      parameters:
        - name: picks
          in: query
          description: Selection of properties to return.
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplAppResponse'
    put:
      operationId: toggleApps
      description: Turn on/off list of apps for a team
      x-aclSchema: App
      requestBody:
        description: App toggles
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully toggled apps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplAppResponse'
  /apps/{teamId}/{appId}:
    parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      - in: path
        name: appId
        required: true
        schema:
          type: string
    get:
      operationId: getApp
      description: Get app information
      x-aclSchema: App
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplAppResponse'
    put:
      operationId: editApp
      description: Edit app values
      x-aclSchema: App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplAppRequest'
        description: Edit app values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited app values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplAppResponse'

# -------------------------------------------- Servers

servers:
  - url: '/v2'

# -------------------------------------------- Components
components:
  parameters:
    backupParams:
      name: backupId
      in: path
      description: ID of the backup
      required: true
      schema:
        type: string
    buildParams:
      name: buildId
      in: path
      description: ID of the build
      required: true
      schema:
        type: string
    policyParams:
      name: policyId
      in: path
      description: ID of the policy
      required: true
      schema:
        type: string
    userParams:
      name: userId
      in: path
      description: ID of the user
      required: true
      schema:
        type: string
    projectParams:
      name: projectId
      in: path
      description: ID of the project
      required: true
      schema:
        type: string
    coderepoParams:
      name: coderepoId
      in: path
      description: ID of the code repo
      required: true
      schema:
        type: string
    teamParams:
      name: teamId
      in: path
      description: ID of team to return
      required: true
      schema:
        type: string
    netpolParams:
      name: netpolId
      in: path
      description: ID of the network policy
      required: true
      schema:
        type: string
    serviceParams:
      name: serviceId
      in: path
      description: ID of the service
      required: true
      schema:
        type: string
    secretParams:
      name: secretId
      in: path
      description: ID of the secret
      required: true
      schema:
        type: string
    settingsParams:
      name: settingId
      in: path
      description: ID of the setting
      required: true
      schema:
        type: string
    workloadParams:
      name: workloadId
      in: path
      description: ID of the workload
      required: true
      schema:
        type: string
  securitySchemes:
    groupAuthn:
      type: apiKey
      name: Authorization
      in: header
    groupAuthz:
      type: apiKey
      name: Authorization
      in: header

  # -------------------------------------------- Schemas
  # Indicate root schemas with UpperCamelCase (e.g. Cluster)
  # Indicate definition references with camelCase (e.g. azureCreds)
  #
  # Please stick to: alphabetical sorting, all Uppercase first and then lowercase.
  # --------------------------------------------
  schemas:
    aplResourceKind:
      type: string
      enum:
        - AplCoreApp
        - AplAlerts
        - AplCluster
        - AplDatabase
        - AplDns
        - AplIngress
        - AplObjectStorage
        - AplKms
        - AplIdentityProvider
        - AplCapabilities
        - AplSmtp
        - AplBackups
        - AplUser
        - AplTeamBuild
        - AplTeamCodeRepo
        - AplTeamPolicy
        - AplTeamSettings
        - AplTeamNetworkControl
        - AplTeamProject
        - AplTeamBackup
        - AplTeamSecret
        - AplTeamService
        - AplTeamWorkload
        - AplTeamTools
        - AplVersions
    aplResourceLabels:
      type: object
      properties:
        apl.io/id:
          type: string
    aplResourceTeamLabels:
      type: object
      properties:
        apl.io/id:
          type: string
        apl.io/teamId:
          $ref: 'definitions.yaml#/idName'
    aplResourceRequestMetadata:
      type: object
      properties:
        name:
          $ref: 'definitions.yaml#/idName'
      required:
        - name
    aplResourceMetadata:
      type: object
      properties:
        name:
          $ref: 'definitions.yaml#/idName'
        labels:
          $ref: '#/components/schemas/aplResourceLabels'
      required:
        - name
        - labels
    aplResourceTeamMetadata:
      type: object
      properties:
        name:
          type: string
        labels:
          $ref: '#/components/schemas/aplResourceTeamLabels'
      required:
        - name
        - labels
    aplResourceStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/aplResourceStatusCondition'
        phase:
          type: string
    aplResourceStatusCondition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          format: date-time
        message:
          type: string
        reason:
          type: string
        status:
          type: boolean
        type:
          type: string
    aplMetadataRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceRequestMetadata'
    aplMetadataResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceMetadata'
    aplTeamMetadataResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceTeamMetadata'
    aplStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/aplResourceStatus'

    AplApp:
      type: object
      properties:
        kind:
          type: string
          enum: [AplCoreApp]
        spec:
          $ref: '#/components/schemas/App'
    AplAppRequest:
      allOf:
        - $ref: '#/components/schemas/AplApp'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplAppResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplApp'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplTeamSettings:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamSettings]
        spec:
          $ref: '#/components/schemas/Team'
    AplTeamSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/AplTeamSettings'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplTeamSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplTeamSettings'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplUser:
      type: object
      properties:
        kind:
          type: string
          enum: [AplUser]
        spec:
          $ref: '#/components/schemas/Team'
    AplUserRequest:
      allOf:
        - $ref: '#/components/schemas/AplUser'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplUserResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplUser'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplService:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamService]
        spec:
          $ref: '#/components/schemas/Service'
    AplServiceRequest:
      allOf:
        - $ref: '#/components/schemas/AplService'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplService'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplSecret:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamSecret]
        spec:
          $ref: '#/components/schemas/SealedSecret'
    AplSecretRequest:
      allOf:
        - $ref: '#/components/schemas/AplSecret'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplSecretResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplSecret'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplNetpol:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamNetworkControl]
        spec:
          $ref: '#/components/schemas/Netpol'
    AplNetpolRequest:
      allOf:
        - $ref: '#/components/schemas/AplNetpol'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplNetpolResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplNetpol'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplBackup:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamBackup]
        spec:
          $ref: '#/components/schemas/Backup'
    AplBackupRequest:
      allOf:
        - $ref: '#/components/schemas/AplBackup'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplBackupResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplBackup'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplBuild:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamBuild]
        spec:
          $ref: '#/components/schemas/Build'
    AplBuildRequest:
      allOf:
        - $ref: '#/components/schemas/AplBuild'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplBuildResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplBuild'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplPolicy:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamPolicy]
        spec:
          $ref: '#/components/schemas/Policy'
    AplPolicyRequest:
      allOf:
        - $ref: '#/components/schemas/AplPolicy'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplPolicyResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplPolicy'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplProject:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamProject]
        spec:
          $ref: '#/components/schemas/Project'
    AplProjectRequest:
      allOf:
        - $ref: '#/components/schemas/AplProject'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplProjectResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplProject'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplCodeRepo:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamCodeRepo]
        spec:
          $ref: '#/components/schemas/CodeRepo'
    AplCodeRepoRequest:
      allOf:
        - $ref: '#/components/schemas/AplCodeRepo'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplCodeRepoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplCodeRepo'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status
    AplWorkload:
      type: object
      properties:
        kind:
          type: string
          enum: [AplTeamWorkload]
        spec:
          $ref: '#/components/schemas/Workload'
    AplWorkloadRequest:
      allOf:
        - $ref: '#/components/schemas/AplWorkload'
        - $ref: '#/components/schemas/aplMetadataRequest'
      required:
        - kind
        - metadata
        - spec
    AplWorkloadResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplWorkload'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
      required:
        - kind
        - metadata
        - spec
        - status

    App:
      $ref: 'app.yaml#/App'
    Backup:
      $ref: 'backup.yaml#/Backup'
    Build:
      $ref: 'build.yaml#/Build'
    Cloudtty:
      $ref: 'cloudtty.yaml#/Cloudtty'
    Cluster:
      $ref: 'cluster.yaml#/Cluster'
    CodeRepo:
      $ref: 'coderepo.yaml#/CodeRepo'
    Ingress:
      $ref: 'service.yaml#/Ingress'
    IngressCluster:
      $ref: 'service.yaml#/IngressCluster'
    IngressPublic:
      $ref: 'service.yaml#/IngressPublic'
    Kubecfg:
      $ref: 'kubecfg.yaml#/Kubecfg'
    Netpol:
      $ref: 'netpol.yaml#/Netpol'
    DockerConfig:
      $ref: 'dockerconfig.yaml#/DockerConfig'
    OpenApiValidationError:
      $ref: 'error.yaml#/OpenApiValidationError'
    OtomiStackError:
      $ref: 'error.yaml#/OtomiStackError'
    OtomiCliValues:
      $ref: 'otomi/cli.yaml#/OtomiCliValues'
    Project:
      $ref: 'project.yaml#/Project'
    Policy:
      $ref: 'policies.yaml#/Policy'
    Policies:
      $ref: 'policies.yaml#/Policies'
    SealedSecret:
      $ref: 'sealedsecret.yaml#/SealedSecret'
    SealedSecretsKeys:
      $ref: 'sealedsecretskeys.yaml#/SealedSecretsKeys'
    Service:
      $ref: 'service.yaml#/Service'
    Session:
      $ref: 'session.yaml#/Session'
    ObjWizard:
      $ref: 'objwizard.yaml#/ObjWizard'
    Settings:
      $ref: 'settings.yaml#/Settings'
    SettingsInfo:
      $ref: 'settingsinfo.yaml#/SettingsInfo'
    TestRepoConnect:
      $ref: 'testrepoconnect.yaml#/TestRepoConnect'
    InternalRepoUrls:
      $ref: 'internalRepoUrls.yaml#/InternalRepoUrls'
    Team:
      $ref: 'team.yaml#/Team'
    TeamAuthz:
      $ref: 'user.yaml#/TeamAuthz'
    TeamSelfService:
      $ref: 'team.yaml#/TeamSelfService'
    User:
      $ref: 'user.yaml#/User'
    SessionUser:
      $ref: 'user.yaml#/SessionUser'
    Workload:
      allOf:
        - $ref: 'workload.yaml#/Workload'
        - $ref: 'workload.yaml#/WorkloadValues'
      required:
        - url
