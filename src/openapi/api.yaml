openapi: '3.0.0'
security:
  - groupAuthz: [ ]
info:
  title: The otomi API
  description: Holds the entire schema needed by console to autogenerate forms
  version: 2.0.0b1

externalDocs:
  description: 'This is the base url of the external documentation'
  url: https://apl-docs.net/ #Using this URL a final docUrl can be made using this+info.version+ the component's x-externalDocsPath

x-responses:
  BadRequest: &BadRequest
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OpenApiValidationError'

  OtomiStackError: &OtomiStackError
    description: Resource already exists
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OtomiStackError'

  NotFound: &NotFound
    description: Resource does not exist
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/OtomiStackError'

x-post-responses: &DefaultPostResponses
  '400':
    <<: *BadRequest
  '409':
    <<: *OtomiStackError

x-get-responses: &DefaultGetResponses
  '400':
    <<: *BadRequest
  '404':
    <<: *NotFound

# -------------------------------------------- Paths
paths:
  /v1/otomi/values:
    get:
      operationId: getValues
      description: Get otomi values
      x-aclSchema: OtomiCliValues
      parameters:
        - name: filesOnly
          in: query
          description: IDs of settings to return
          schema:
            type: string
            enum: [ 'true', 'false' ]
        - name: excludeSecrets
          in: query
          schema:
            type: string
            enum: [ 'true', 'false' ]
        - name: withWorkloadValues
          in: query
          schema:
            type: string
            enum: [ 'true', 'false' ]
      responses:
        '200':
          description: Successfully obtained otomi values
          content:
            application/yaml:
              schema:
                $ref: '#/components/schemas/OtomiCliValues'

  /v1/teams:
    get:
      operationId: getTeams
      description: Get teams collection
      x-aclSchema: Team
      responses:
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      operationId: createTeam
      description: Create a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        description: Team object that needs to be added to the collection
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully obtained teams collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  '/v1/teams/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeam
      description: Get a specific team
      x-aclSchema: Team
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      operationId: editTeam
      description: Edit a team
      x-aclSchema: Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        description: Team object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      operationId: deleteTeam
      description: Delete team
      x-aclSchema: Team
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team

  /v1/services:
    get:
      operationId: getAllServices
      description: Get all services running on the cluster
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained all services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '400':
          <<: *BadRequest

  '/v1/teams/{teamId}/services':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamServices
      description: Get services from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '400':
          <<: *BadRequest

    post:
      operationId: createService
      description: Create a service
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        description: Service object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'

  '/v1/teams/{teamId}/kubernetes/services':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamK8sServices
      description: Get services from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained kuberntes services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/K8sService'
        '400':
          <<: *BadRequest

  '/v1/teams/{teamId}/services/{serviceName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/serviceParams'
    get:
      operationId: getService
      description: Get a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
    put:
      operationId: editService
      description: Edit a service from a given team
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        description: Service object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
    delete:
      operationId: deleteService
      description: Delete a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a service

  /v2/services:
    get:
      operationId: getAllServices
      description: Get all services running on the cluster
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained all services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplServiceResponse'
        '400':
          <<: *BadRequest

  '/v2/teams/{teamId}/services':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamServices
      description: Get services from a given team
      x-aclSchema: Service
      responses:
        '200':
          description: Successfully obtained services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplServiceResponse'
        '400':
          <<: *BadRequest

    post:
      operationId: createService
      description: Create a service
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplServiceRequest'
        description: Service object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'

  '/v2/teams/{teamId}/services/{serviceId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/serviceParams'
    get:
      operationId: getService
      description: Get a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained service configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'
    put:
      operationId: editService
      description: Edit a service from a given team
      x-aclSchema: Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplServiceRequest'
        description: Service object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplServiceResponse'
    delete:
      operationId: deleteService
      description: Delete a service from a given team
      x-aclSchema: Service
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a service

  /v1/sealedsecrets:
    get:
      operationId: getAllSealedSecrets
      description: Get all sealed secrets
      x-aclSchema: SealedSecret
      responses:
        '200':
          description: Successfully obtained all sealed secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SealedSecret'
        '400':
          <<: *BadRequest

  /v1/sealedsecretskeys:
    get:
      operationId: downloadSealedSecretKeys
      description: Download sealed secret keys
      x-aclSchema: SealedSecretsKeys
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully downloaded sealed secret keys
          content:
            application/key:
              schema:
                $ref: '#/components/schemas/SealedSecretsKeys'
        '400':
          <<: *BadRequest

  '/v1/teams/{teamId}/k8sSecrets':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getSecretsFromK8s
      description: Get secrets from k8s
      x-aclSchema: K8sSecret
      responses:
        '200':
          description: Successfully obtained secrets from k8s
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/K8sSecret'
        '400':
          <<: *BadRequest

  '/v1/teams/{teamId}/sealedsecrets':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getSealedSecrets
      description: Get sealed secrets from a given team
      x-aclSchema: SealedSecret
      responses:
        '200':
          description: Successfully obtained sealed secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SealedSecret'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createSealedSecret
      description: Create a team sealed secret
      x-aclSchema: SealedSecret
      parameters:
        - name: teamId
          in: path
          description: ID of team
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SealedSecret'
        description: SealedSecret object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SealedSecret'

  '/v1/teams/{teamId}/sealedsecrets/{sealedSecretName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/sealedSecretParams'
    get:
      operationId: getSealedSecret
      description: Get a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SealedSecret'
    put:
      operationId: editSealedSecret
      description: Edit a sealed secret from a given team
      x-aclSchema: SealedSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SealedSecret'
        description: SealedSecret object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team sealed secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SealedSecret'
    delete:
      operationId: deleteSealedSecret
      description: Delete a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team sealed secret

  /v2/sealedsecrets:
    get:
      operationId: getAllSecrets
      description: Get all secrets
      x-aclSchema: Secret
      responses:
        '200':
          description: Successfully obtained all secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplSecretResponse'
        '400':
          <<: *BadRequest

  '/v2/teams/{teamId}/sealedsecrets':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getSealedSecrets
      description: Get sealed secrets from a given team
      x-aclSchema: SealedSecret
      responses:
        '200':
          description: Successfully obtained sealed secrets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplSecretResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createSealedSecret
      description: Create a team sealed secret
      x-aclSchema: SealedSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplSecretRequest'
        description: SealedSecret object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'

  '/v2/teams/{teamId}/sealedsecrets/{secretId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/sealedSecretParams'
    get:
      operationId: getSealedSecret
      description: Get a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained sealed secret configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'
    put:
      operationId: editSealedSecret
      description: Edit a sealed secret from a given team
      x-aclSchema: SealedSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplSecretRequest'
        description: SealedSecret object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team sealed secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplSecretResponse'
    delete:
      operationId: deleteSealedSecret
      description: Delete a sealed secret from a given team
      x-aclSchema: SealedSecret
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team sealed secret

  '/v1/netpols':
    get:
      operationId: getAllNetpols
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Netpol'

  '/v1/teams/{teamId}/netpols':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamNetpols
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Netpol'
    post:
      operationId: createNetpol
      description: Create a team network policy
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netpol'
        description: Network policy object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Netpol'

  '/v1/teams/{teamId}/netpols/{netpolName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/netpolParams'
    get:
      operationId: getNetpol
      description: Get a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Netpol'
    put:
      operationId: editNetpol
      description: Edit a network policy from a given team
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Netpol'
        description: Netwok policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team network policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Netpol'
    delete:
      operationId: deleteNetpol
      description: Delete a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team network policy

  '/v2/netpols':
    get:
      operationId: getAllNetpols
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplNetpolResponse'

  '/v2/teams/{teamId}/netpols':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamNetpols
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team network policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplNetpolResponse'
    post:
      operationId: createNetpol
      description: Create a team network policy
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplNetpolRequest'
        description: Network policy object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'

  '/v2/teams/{teamId}/netpols/{netpolId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/netpolParams'
    get:
      operationId: getNetpol
      description: Get a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained network policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'
    put:
      operationId: editNetpol
      description: Edit a network policy from a given team
      x-aclSchema: Netpol
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplNetpolRequest'
        description: Netwok policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team network policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplNetpolResponse'
    delete:
      operationId: deleteNetpol
      description: Delete a network policy from a given team
      x-aclSchema: Netpol
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team network policy

  '/v1/backups':
    get:
      operationId: getAllBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Backup'

  '/v1/teams/{teamId}/backups':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Backup'
    post:
      operationId: createBackup
      description: Create a team backup
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
        description: Backup object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'

  '/v1/teams/{teamId}/backups/{backupName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/backupParams'
    delete:
      operationId: deleteBackup
      description: Delete a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a backup
    get:
      operationId: getBackup
      description: Get a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
    put:
      operationId: editBackup
      description: Edit a backup from a given team
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
        description: Backup object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'

  '/v2/backups':
    get:
      operationId: getAllBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBackupResponse'

  '/v2/teams/{teamId}/backups':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBackups
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team backups configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBackupResponse'
    post:
      operationId: createBackup
      description: Create a team backup
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBackupRequest'
        description: Backup object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'

  '/v2/teams/{teamId}/backups/{backupId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/backupParams'
    delete:
      operationId: deleteBackup
      description: Delete a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a backup
    get:
      operationId: getBackup
      description: Get a backup from a given team
      x-aclSchema: Backup
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained backup configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'
    put:
      operationId: editBackup
      description: Edit a backup from a given team
      x-aclSchema: Backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBackupRequest'
        description: Backup object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team backup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBackupResponse'

  '/v1/teams/{teamId}/dashboard':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getDashboard
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained dashboard inventory data
          content:
            application/json:
              schema:
                type: object

  '/v1/builds':
    get:
      operationId: getAllBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Build'

  '/v1/teams/{teamId}/builds':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Build'
    post:
      operationId: createBuild
      description: Create a team build
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        description: Build object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'

  '/v1/teams/{teamId}/builds/{buildName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/buildParams'
    delete:
      operationId: deleteBuild
      description: Delete a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a build
    get:
      operationId: getBuild
      description: Get a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
    put:
      operationId: editBuild
      description: Edit a build from a given team
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        description: Build object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'

  '/v2/builds':
    get:
      operationId: getAllBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBuildResponse'

  '/v2/teams/{teamId}/builds':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamBuilds
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team builds configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplBuildResponse'
    post:
      operationId: createBuild
      description: Create a team build
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBuildRequest'
        description: Build object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'

  '/v2/teams/{teamId}/builds/{buildId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/buildParams'
    delete:
      operationId: deleteBuild
      description: Delete a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a build
    get:
      operationId: getBuild
      description: Get a build from a given team
      x-aclSchema: Build
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained build configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'
    put:
      operationId: editBuild
      description: Edit a build from a given team
      x-aclSchema: Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplBuildRequest'
        description: Build object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplBuildResponse'

  '/v1/policies':
    get:
      operationId: getAllPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policies'

  '/v1/teams/{teamId}/policies':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policies'

  '/v1/teams/{teamId}/policies/{policyId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/policyParams'
    get:
      operationId: getPolicy
      description: Get a policy from a given team
      x-aclSchema: Policy
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
    put:
      operationId: editPolicy
      description: Edit a policy from a given team
      x-aclSchema: Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        description: Policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'

  '/v2/policies':
    get:
      operationId: getAllPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: '#/components/schemas/AplPolicyResponse'

  '/v2/teams/{teamId}/policies':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamPolicies
      x-aclSchema: Policies
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team policy configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: '#/components/schemas/AplPolicyResponse'

  '/v2/teams/{teamId}/policies/{policyId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/policyParams'
    get:
      operationId: getPolicy
      description: Get a policy from a given team
      x-aclSchema: Policy
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained policy configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'
    put:
      operationId: editPolicy
      description: Edit a policy from a given team
      x-aclSchema: Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplPolicyRequest'
        description: Policy object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplPolicyResponse'

  '/v1/k8sVersion':
    get:
      operationId: getK8sVersion
      description: Get cluster k8s version
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully obtained k8s version
          content:
            application/json:
              schema:
                type: string

  '/v1/cloudtty':
    post:
      operationId: connectCloudtty
      description: Create a cloudtty url
      x-aclSchema: Cloudtty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloudtty'
        description: Cloudtty object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored cloudtty configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloudtty'
    delete:
      operationId: deleteCloudtty
      description: Delete cloudtty url
      x-aclSchema: Cloudtty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloudtty'
        description: Cloudtty object
        required: true
      responses:
        '200':
          description: Successfully removed cloudtty url

  '/v1/users':
    get:
      operationId: getAllUsers
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all users configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      operationId: createUser
      description: Create a team user
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored user configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  '/v1/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userParams'
    get:
      operationId: getUser
      description: Get a user from a given team
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained user configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      operationId: editUser
      description: Edit a user from a given team
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: deleteUser
      description: Delete a user from a given team
      x-aclSchema: User
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a user

  '/v1/teams/{teamId}/users':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    put:
      operationId: editTeamUsers
      description: Edit a user from a given team
      x-aclSchema: User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  id:
                    $ref: '#/components/schemas/User/properties/id'
                  email:
                    $ref: '#/components/schemas/User/properties/email'
                  isPlatformAdmin:
                    $ref: '#/components/schemas/User/properties/isPlatformAdmin'
                  isTeamAdmin:
                    $ref: '#/components/schemas/User/properties/isTeamAdmin'
                  teams:
                    $ref: '#/components/schemas/User/properties/teams'
        description: User object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  '/v1/projects':
    get:
      operationId: getAllProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

  '/v1/teams/{teamId}/projects':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      operationId: createProject
      description: Create a team project
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: Project object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  '/v1/teams/{teamId}/projects/{projectName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/projectParams'
    delete:
      operationId: deleteProject
      description: Delete a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a project
    get:
      operationId: getProject
      description: Get a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      operationId: editProject
      description: Edit a project from a given team
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Project object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  '/v2/projects':
    get:
      operationId: getAllProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplProjectResponse'

  '/v2/teams/{teamId}/projects':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamProjects
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team projects configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplProjectResponse'
    post:
      operationId: createProject
      description: Create a team project
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplProjectRequest'
        description: Project object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'

  '/v2/teams/{teamId}/projects/{projectId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/projectParams'
    delete:
      operationId: deleteProject
      description: Delete a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a project
    get:
      operationId: getProject
      description: Get a project from a given team
      x-aclSchema: Project
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained project configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'
    put:
      operationId: editProject
      description: Edit a project from a given team
      x-aclSchema: Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplProjectRequest'
        description: Project object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplProjectResponse'

  /v1/coderepos:
    get:
      operationId: getAllCodeRepos
      description: Get all code repositories
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained all code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeRepo'
        '400':
          <<: *BadRequest

  '/v1/teams/{teamId}/coderepos':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamCodeRepos
      description: Get code repos from a given team
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeRepo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createCodeRepo
      description: Create a team code repo
      x-aclSchema: CodeRepo
      parameters:
        - name: teamId
          in: path
          description: ID of team
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRepo'
        description: CodeRepo object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRepo'

  '/v1/teams/{teamId}/coderepos/{codeRepositoryName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/codeRepoParams'
    get:
      operationId: getCodeRepo
      description: Get a code repo from a given team
      x-aclSchema: CodeRepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRepo'
    put:
      operationId: editCodeRepo
      description: Edit a code repo from a given team
      x-aclSchema: CodeRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeRepo'
        description: CodeRepo object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team code repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRepo'
    delete:
      operationId: deleteCodeRepo
      description: Delete a code repo from a given team
      x-aclSchema: CodeRepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team code repo

  /v2/coderepos:
    get:
      operationId: getAllCodeRepos
      description: Get all code repositories
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained all code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplCodeRepoResponse'
        '400':
          <<: *BadRequest

  '/v2/teams/{teamId}/coderepos':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamCodeRepos
      description: Get code repos from a given team
      x-aclSchema: CodeRepo
      responses:
        '200':
          description: Successfully obtained code repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplCodeRepoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiValidationError'
    post:
      operationId: createCodeRepo
      description: Create a team code repo
      x-aclSchema: CodeRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplCodeRepoRequest'
        description: CodeRepo object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'

  '/v2/teams/{teamId}/coderepos/{coderepoId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/codeRepoParams'
    get:
      operationId: getCodeRepo
      description: Get a code repo from a given team
      x-aclSchema: Coderepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained code repo configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'
    put:
      operationId: editCodeRepo
      description: Edit a code repo from a given team
      x-aclSchema: CodeRepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplCodeRepoRequest'
        description: CodeRepo object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team code repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplCodeRepoResponse'
    delete:
      operationId: deleteCodeRepo
      description: Delete a code repo from a given team
      x-aclSchema: CodeRepo
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a team code repo

  '/v1/workloads':
    get:
      operationId: getAllWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workload'

  '/v1/workloadCatalog':
    post:
      operationId: workloadCatalog
      description: Get workload catalog from a repository
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Project object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully updated a team project
          content:
            application/json:
              schema:
                type: object

  '/v1/helmChartContent':
    get:
      operationId: getHelmChartContent
      parameters:
        - name: url
          in: query
          description: URL of the helm chart
          schema:
            type: string
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained helm chart content
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: object
                  error:
                    type: string
  '/v1/createWorkloadCatalog':
    post:
      operationId: createWorkloadCatalog
      description: Create workload catalog from a repository
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Project object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully updated a team project
          content:
            application/json:
              schema:
                type: object

  '/v1/teams/{teamId}/workloads':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workload'
    post:
      operationId: createWorkload
      description: Create a team workload
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
        description: Workload object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'

  '/v1/teams/{teamId}/workloads/{workloadName}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/workloadParams'
    delete:
      operationId: deleteWorkload
      description: Delete a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a workload
    get:
      operationId: getWorkload
      description: Get a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
    put:
      operationId: editWorkload
      description: Edit a workload from a given team
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
        description: Workload object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team workload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'

  '/v1/teams/{teamId}/workloads/{workloadName}/values':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/workloadParams'
    get:
      operationId: getWorkloadValues
      description: Get workload helm chart values
      x-aclSchema: Workload
      responses:
        '200':
          description: Successfully obtained all workload values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadValues'
        '400':
          <<: *BadRequest
    put:
      operationId: editWorkloadValues
      description: Edit workload values
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadValues'
        description: Workload values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited workload values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadValues'

  '/v2/workloads':
    get:
      operationId: getAllWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained all workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplWorkloadResponse'

  '/v2/teams/{teamId}/workloads':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: getTeamWorkloads
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained team workloads configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AplWorkloadResponse'
    post:
      operationId: createWorkload
      description: Create a team workload
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplWorkloadRequest'
        description: Workload object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully stored workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'

  '/v2/teams/{teamId}/workloads/{workloadId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
      - $ref: '#/components/parameters/workloadParams'
    delete:
      operationId: deleteWorkload
      description: Delete a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully deleted a workload
    get:
      operationId: getWorkload
      description: Get a workload from a given team
      x-aclSchema: Workload
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained workload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'
    put:
      operationId: editWorkload
      description: Edit a workload from a given team
      x-aclSchema: Workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AplWorkloadRequest'
        description: Workload object that contains updated values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited a team workload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AplWorkloadResponse'

  '/v1/kubecfg/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: downloadKubecfg
      description: Download a kubecfg for a team
      x-aclSchema: Kubecfg
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Succesfully finished the download
          content:
            'application/yaml':
              schema:
                $ref: '#/components/schemas/Kubecfg'

  '/v1/dockerconfig/{teamId}':
    parameters:
      - $ref: '#/components/parameters/teamParams'
    get:
      operationId: downloadDockerConfig
      description: Download Docker login creds for a team
      x-aclSchema: DockerConfig
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Succesfully finished the download
          content:
            'application/yaml':
              schema:
                $ref: '#/components/schemas/DockerConfig'

  /v1/session:
    get:
      operationId: getSession
      description: Get the session for the current user
      responses:
        '200':
          description: Get the session for the logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        default:
          description: The requested session.
  /apiDocs:
    get:
      operationId: 'apiDocs'
      security: [ ]
      description: Get OpenAPIDoc document
      responses:
        '200':
          description: The requested apiDoc.
          content:
            application/json:
              schema:
                type: object
        default:
          description: The requested apiDoc.

  /v1/apiDocs:
    get:
      operationId: 'apiDocs'
      security: [ ]
      description: Get OpenAPIDoc document
      responses:
        '200':
          description: The requested apiDoc.
          content:
            application/json:
              schema:
                type: object
        default:
          description: The requested apiDoc.

  /v1/settingsInfo:
    get:
      operationId: getSettingsInfo
      description: Get settings information from the 'settings.yaml' file.
      x-aclSchema: SettingsInfo
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfo'

  /v1/testRepoConnect:
    get:
      operationId: getTestRepoConnect
      description: Get settings information from the 'settings.yaml' file.
      x-aclSchema: TestRepoConnect
      parameters:
        - name: url
          in: query
          description: URL of the repository
          schema:
            type: string
        - name: teamId
          in: query
          description: Id of the team
          schema:
            type: string
        - name: secret
          in: query
          description: Name of the secret for private repositories
          schema:
            type: string
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRepoConnect'

  /v1/internalRepoUrls:
    get:
      operationId: getInternalRepoUrls
      x-aclSchema: InternalRepoUrls
      parameters:
        - name: teamId
          in: query
          description: ID of the team
          schema:
            type: string
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully obtained internal repo urls
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  '/v1/objwizard':
    post:
      operationId: createObjWizard
      description: Create a obj wizard configuration
      x-aclSchema: ObjWizard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjWizard'
        description: ObjWizard object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully configured obj wizard configuration
          content:
            application/json:
              schema:
                type: object

  /v1/settings:
    get:
      operationId: getSettings
      description: Get settings from the 'settings.yaml' or 'secret.settings.yaml' file.
      x-aclSchema: Settings
      parameters:
        - name: ids
          in: query
          description: IDs of settings to return
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'

  '/v1/settings/{settingId}':
    parameters:
      - $ref: '#/components/parameters/settingsParams'
    put:
      operationId: editSettings
      description: Edit settings from the 'settings.yaml' or 'secret.settings.yaml' file.
      x-aclSchema: Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        description: Put new settings.
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited settings.

  /v1/apps/{teamId}:
    parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
    get:
      operationId: getApps
      description: Get list of apps for a team
      x-aclSchema: App
      parameters:
        - name: picks
          in: query
          description: Selection of properties to return.
          schema:
            type: array
            items:
              type: string
              uniqueItems: true
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
    put:
      operationId: toggleApps
      description: Turn on/off list of apps for a team
      x-aclSchema: App
      requestBody:
        description: App toggles
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        <<: *DefaultPostResponses
        '200':
          description: Successfully toggled apps
  /v1/apps/{teamId}/{appId}:
    parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      - in: path
        name: appId
        required: true
        schema:
          type: string
    get:
      operationId: getApp
      description: Get app information
      x-aclSchema: App
      responses:
        '200':
          description: The request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
    put:
      operationId: editApp
      description: Edit app values
      x-aclSchema: App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        description: Edit app values
        required: true
      responses:
        <<: *DefaultGetResponses
        '200':
          description: Successfully edited app values.

## -------------------------------------------- Servers
#
#servers:
#  - url: '/'

# -------------------------------------------- Components
components:
  parameters:
    backupParams:
      name: backupName
      in: path
      description: Name of the backup
      required: true
      schema:
        type: string
    buildParams:
      name: buildName
      in: path
      description: Name of the build
      required: true
      schema:
        type: string
    policyParams:
      name: policyId
      in: path
      description: ID of the policy
      required: true
      schema:
        type: string
    userParams:
      name: userId
      in: path
      description: ID of the user
      required: true
      schema:
        type: string
    projectParams:
      name: projectName
      in: path
      description: Name of the project
      required: true
      schema:
        type: string
    codeRepoParams:
      name: codeRepositoryName
      in: path
      description: Name of the code repository
      required: true
      schema:
        type: string
    teamParams:
      name: teamId
      in: path
      description: ID of team to return
      required: true
      schema:
        type: string
    netpolParams:
      name: netpolName
      in: path
      description: Name of the network policy
      required: true
      schema:
        type: string
    serviceParams:
      name: serviceName
      in: path
      description: Name of the service
      required: true
      schema:
        type: string
    sealedSecretParams:
      name: sealedSecretName
      in: path
      description: Name of the sealed secret
      required: true
      schema:
        type: string
    settingsParams:
      name: settingId
      in: path
      description: ID of the setting
      required: true
      schema:
        type: string
    workloadParams:
      name: workloadName
      in: path
      description: Name of the workload
      required: true
      schema:
        type: string
  securitySchemes:
    groupAuthn:
      type: apiKey
      name: Authorization
      in: header
    groupAuthz:
      type: apiKey
      name: Authorization
      in: header

  # -------------------------------------------- Schemas
  # Indicate root schemas with UpperCamelCase (e.g. Cluster)
  # Indicate definition references with camelCase (e.g. azureCreds)
  #
  # Please stick to: alphabetical sorting, all Uppercase first and then lowercase.
  # --------------------------------------------
  schemas:
    aplResourceKind:
      type: string
      enum:
        - 'AplApp'
        - 'AplAlertSet'
        - 'AplCluster'
        - 'AplDatabase'
        - 'AplDns'
        - 'AplIngress'
        - 'AplObjectStorage'
        - 'AplKms'
        - 'AplIdentityProvider'
        - 'AplCapabilitySet'
        - 'AplSmtp'
        - 'AplBackupCollection'
        - 'AplUser'
        - 'AplTeamCodeRepo'
        - 'AplTeamBuild'
        - 'AplTeamPolicy'
        - 'AplTeamSettingSet'
        - 'AplTeamNetworkControl'
        - 'AplTeamProject'
        - 'AplTeamBackup'
        - 'AplTeamSecret'
        - 'AplTeamService'
        - 'AplTeamWorkload'
        - 'AplTeamWorkloadValues'
        - 'AplTeamTool'
        - 'AplVersion'
    aplResourceLabels:
      type: object
      properties:
        apl.io/id:
          type: string
    aplResourceTeamLabels:
      type: object
      properties:
        apl.io/id:
          type: string
        apl.io/teamId:
          $ref: 'definitions.yaml#/idName'
    aplResourceRequestMetadata:
      type: object
      properties:
        name:
          $ref: 'definitions.yaml#/idName'
      required:
        - name
    aplResourceMetadata:
      type: object
      properties:
        name:
          $ref: 'definitions.yaml#/idName'
        labels:
          $ref: '#/components/schemas/aplResourceLabels'
      required:
        - name
        - labels
    aplResourceTeamMetadata:
      type: object
      properties:
        name:
          type: string
        labels:
          $ref: '#/components/schemas/aplResourceTeamLabels'
      required:
        - name
        - labels
    aplResourceStatus:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/aplResourceStatusCondition'
        phase:
          type: string
    aplResourceStatusCondition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          format: date-time
        message:
          type: string
        reason:
          type: string
        status:
          type: boolean
        type:
          type: string
    aplMetadataRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceRequestMetadata'
      required:
        - metadata
    aplMetadataResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceMetadata'
      required:
        - metadata
    aplTeamMetadataResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/aplResourceTeamMetadata'
      required:
        - metadata
    aplStatusResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/aplResourceStatus'
      required:
        - status
    resourceMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          title: Name
          example: name
          $ref: 'definitions.yaml#/idName'
      required:
        - name
    teamResourceMetadata:
      type: object
      properties:
        id:
          type: string
        teamId:
          example: teamId
          $ref: 'definitions.yaml#/idName'
        name:
          title: Name
          example: name
          $ref: 'definitions.yaml#/idName'
      required:
        - name
    AplApp:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplCoreApp ]
        spec:
          $ref: 'app.yaml#/App'
      required:
        - kind
        - spec
    AplAppRequest:
      allOf:
        - $ref: '#/components/schemas/AplApp'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplAppResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplApp'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplBackup:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamBackup ]
        spec:
          $ref: 'backup.yaml#/AplBackup'
      required:
        - kind
        - spec
    AplBackupRequest:
      allOf:
        - $ref: '#/components/schemas/AplBackup'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplBackupResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplBackup'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplBuild:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamBuild ]
        spec:
          $ref: 'build.yaml#/Build'
      required:
        - kind
        - spec
    AplBuildRequest:
      allOf:
        - $ref: '#/components/schemas/AplBuild'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplBuildResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplBuild'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplCodeRepo:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamCodeRepo ]
        spec:
          $ref: 'codeRepo.yaml#/CodeRepo'
      required:
        - kind
        - spec
    AplCodeRepoRequest:
      allOf:
        - $ref: '#/components/schemas/AplCodeRepo'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplCodeRepoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplCodeRepo'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplNetpol:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamNetworkControl ]
        spec:
          $ref: 'netpol.yaml#/AplNetpol'
      required:
        - kind
        - spec
    AplNetpolRequest:
      allOf:
        - $ref: '#/components/schemas/AplNetpol'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplNetpolResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplNetpol'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplPolicy:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamPolicy ]
        spec:
          $ref: 'policies.yaml#/Policy'
      required:
        - kind
        - spec
    AplPolicyRequest:
      allOf:
        - $ref: '#/components/schemas/AplPolicy'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplPolicyResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplPolicy'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplProject:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamProject ]
        spec:
          $ref: 'project.yaml#/Project'
      required:
        - kind
        - spec
    AplProjectRef:
      allOf:
        - $ref: '#/components/schemas/AplProject'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplProjectRequest:
      allOf:
        - $ref: '#/components/schemas/AplProject'
        - $ref: '#/components/schemas/aplMetadataRequest'
        - type: object
          properties:
            spec:
              type: object
              properties:
                build:
                  $ref: '#/components/schemas/Build'
                workload:
                  allOf:
                    - $ref: '#/components/schemas/Workload'
                    - type: object
                      properties:
                        values:
                          type: string
                      required:
                        - values
                service:
                  $ref: '#/components/schemas/Service'
    AplProjectResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplProject'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
        - type: object
          properties:
            spec:
              type: object
              properties:
                build:
                  $ref: '#/components/schemas/Build'
                workload:
                  allOf:
                    - $ref: '#/components/schemas/Workload'
                    - type: object
                      properties:
                        values:
                          type: string
                      required:
                        - values
                service:
                  $ref: '#/components/schemas/Service'
    AplSecret:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamSecret ]
        spec:
          $ref: 'sealedsecret.yaml#/AplSealedSecret'
      required:
        - kind
        - spec
    AplSecretRequest:
      allOf:
        - $ref: '#/components/schemas/AplSecret'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplSecretResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplSecret'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplService:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamService ]
        spec:
          $ref: 'service.yaml#/AplService'
      required:
        - kind
        - spec
    AplServiceRequest:
      allOf:
        - $ref: '#/components/schemas/AplService'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplService'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplTeamSettings:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamSettings ]
        spec:
          $ref: 'team.yaml#/Team'
      required:
        - kind
        - spec
    AplTeamSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/AplTeamSettings'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplTeamSettingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplTeamSettings'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplUser:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplUser ]
        spec:
          $ref: 'user.yaml#/User'
      required:
        - kind
        - spec
    AplUserRequest:
      allOf:
        - $ref: '#/components/schemas/AplUser'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplUserResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplUser'
        - $ref: '#/components/schemas/aplMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'
    AplWorkload:
      type: object
      properties:
        kind:
          type: string
          enum: [ AplTeamWorkload ]
        spec:
          allOf:
            - $ref: 'workload.yaml#/Workload'
            - type: object
              properties:
                values:
                  type: string
              required:
                - values
      required:
        - kind
        - spec
    AplWorkloadRequest:
      allOf:
        - $ref: '#/components/schemas/AplWorkload'
        - $ref: '#/components/schemas/aplMetadataRequest'
    AplWorkloadResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/AplWorkload'
        - $ref: '#/components/schemas/aplTeamMetadataResponse'
        - $ref: '#/components/schemas/aplStatusResponse'

    App:
      allOf:
        - type: object
          properties:
            id:
              type: string
              x-acl:
                platformAdmin: [ read-any ]
                teamAdmin: [ read-any ]
                teamMember: [ read-any ]
          required:
            - id
        - $ref: 'app.yaml#/App'
    AppList:
      $ref: 'app.yaml#/AppList'
    Backup:
      allOf:
        - $ref: '#/components/schemas/teamResourceMetadata'
        - $ref: 'backup.yaml#/Backup'
    Build:
      allOf:
        - $ref: '#/components/schemas/teamResourceMetadata'
        - $ref: 'build.yaml#/Build'
    Cloudtty:
      $ref: 'cloudtty.yaml#/Cloudtty'
    Cluster:
      $ref: 'cluster.yaml#/Cluster'
    CodeRepo:
      allOf:
        - $ref: '#/components/schemas/teamResourceMetadata'
        - $ref: 'codeRepo.yaml#/CodeRepo'
    K8sService:
      $ref: 'k8s.yaml#/K8sService'
    Kubecfg:
      $ref: 'kubecfg.yaml#/Kubecfg'
    Netpol:
      $ref: 'netpol.yaml#/Netpol'
    DockerConfig:
      $ref: 'dockerconfig.yaml#/DockerConfig'
    OpenApiValidationError:
      $ref: 'error.yaml#/OpenApiValidationError'
    OtomiStackError:
      $ref: 'error.yaml#/OtomiStackError'
    OtomiCliValues:
      $ref: 'otomi/cli.yaml#/OtomiCliValues'
    Project:
      allOf:
        - $ref: '#/components/schemas/teamResourceMetadata'
        - $ref: 'project.yaml#/Project'
        - type: object
          properties:
            build:
              $ref: '#/components/schemas/Build'
            workload:
              $ref: '#/components/schemas/Workload'
            workloadValues:
              $ref: '#/components/schemas/WorkloadValues'
            service:
              $ref: '#/components/schemas/Service'
    Policy:
      $ref: 'policies.yaml#/Policy'
    Policies:
      $ref: 'policies.yaml#/Policies'
    SealedSecret:
      $ref: 'sealedsecret.yaml#/SealedSecret'
    SealedSecretsKeys:
      $ref: 'sealedsecretskeys.yaml#/SealedSecretsKeys'
    K8sSecret:
      $ref: 'k8sSecret.yaml#/K8sSecret'
    SessionUser:
      $ref: 'user.yaml#/SessionUser'
    Service:
      $ref: 'service.yaml#/Service'
    Session:
      $ref: 'session.yaml#/Session'
    ObjWizard:
      $ref: 'objwizard.yaml#/ObjWizard'
    Settings:
      $ref: 'settings.yaml#/Settings'
    SettingsInfo:
      $ref: 'settingsinfo.yaml#/SettingsInfo'
    TestRepoConnect:
      $ref: 'testrepoconnect.yaml#/TestRepoConnect'
    InternalRepoUrls:
      $ref: 'internalRepoUrls.yaml#/InternalRepoUrls'
    Team:
      allOf:
        - $ref: '#/components/schemas/resourceMetadata'
        - $ref: 'team.yaml#/Team'
    TeamAuthz:
      $ref: 'user.yaml#/TeamAuthz'
    TeamSelfService:
      $ref: 'team.yaml#/TeamSelfService'
    User:
      $ref: 'user.yaml#/User'
    Workload:
      allOf:
        - $ref: '#/components/schemas/teamResourceMetadata'
        - $ref: 'workload.yaml#/Workload'
    WorkloadValues:
      allOf:
        - type: object
          properties:
            id:
              $ref: 'definitions.yaml#/idName'
            teamId:
              $ref: 'definitions.yaml#/idName'
            name:
              $ref: 'definitions.yaml#/idName'
        - $ref: 'workload.yaml#/WorkloadValues'
