idName: &idNameField
  type: string
  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$

Service:
  x-acl:
    admin:
      - delete-any
      - read-any
      - create-any
      - update-any
    team:
      - delete
      - read
      - create
      - update
  x-externalDocsPath: docs/configuring-services
  properties:
    enabled:
      default: true
      type: boolean
    id:
      readOnly: true
      type: string
    name:
      <<: *idNameField
      title: Name
      description: A service name
      example: some-service
    port:
      description: A service port
      type: integer
      default: 80
      minimum: 1
      maximum: 65535
    ksvc:
      oneOf:
        - description: Will create a new knative service from the input gathered here.
          properties:
            serviceType:
              default: ksvc
              enum:
                - ksvc
              type: string
            image:
              properties:
                repository:
                  $ref: definitions.yaml#/repository
                tag:
                  pattern: '[\w][\w.-]{0,127}'
                  type: string
              required:
                - repository
                - tag
              title: Container image
              type: object
            scaleToZero:
              default: false
              description: Scales to zero after 60 seconds and needs approximately 8 seconds to start back up.
              title: Scale to zero
              type: boolean
            env:
              $ref: definitions.yaml#/env
            annotations:
              $ref: definitions.yaml#/annotations
              title: Pod annotations
            resources:
              $ref: definitions.yaml#/resources
            secrets:
              $ref: definitions.yaml#/secrets
            autoCD:
              description: Deploys new images based on a tagging strategy
              oneOf:
                - additionalProperties: false
                  nullable: true
                  title: 'Off'
                  type: object
                - nullable: true
                  properties:
                    semver:
                      description: 'Use this filter if your image tags follow semantic versioning rules (MAJOR.MINOR.PATCH). E.g.: PATCH only: "~1.1", MINOR and PATCH only "~1", ALL "*"'
                      example: 'PATCH only: "~1.1", MINOR and PATCH only "~1", ALL "*",  ">=1.2.3-0"'
                      title: Semver version pattern
                      type: string
                    tagMatcher:
                      default: semver
                      enum:
                        - semver
                      type: string
                  required:
                    - semver
                  title: Semver versioning
                  type: object
                - additionalProperties: false
                  properties:
                    glob:
                      description: 'Use this filter if you want to make glob-style patterns. E.g.: "main-v1.3.*"'
                      example: main-v1.3.*
                      title: Glob string pattern
                      type: string
                    tagMatcher:
                      default: glob
                      enum:
                        - glob
                      type: string
                  required:
                    - glob
                  title: Glob pattern matching
                  type: object
              title: Continuous delivery
              type: object
          required:
            - serviceType
          title: Knative service
        - description: Whether to map onto a predeployed knative service. Will take care of rewriting to the existing knative url.
          properties:
            serviceType:
              default: ksvcPredeployed
              enum:
                - ksvcPredeployed
              type: string
          required:
            - serviceType
          title: Existing Knative service
          type: object
        - description: Whether to map onto a predeployed k8s service.
          properties:
            serviceType:
              default: svcPredeployed
              enum:
                - svcPredeployed
              type: string
          required:
            - serviceType
          title: Existing Kubernetes service
          type: object
      title: Type
      type: object
    ingress:
      title: Exposure (ingress)
      type: object
      # Note: the order matters first schma must be nullable empty object
      oneOf:
        - $ref: 'definitions.yaml#/ingressCluster'
        - $ref: 'definitions.yaml#/ingressPrivate'
        - $ref: 'definitions.yaml#/ingressPublic'
    teamId:
      <<: *idNameField
      readOnly: true
  required:
    - name
    - ingress
  type: object
