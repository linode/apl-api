Settings:
  x-acl:
    admin: [read-any, update-any]
    team: []
  additionalProperties: false
  properties:
    alerts:
      title: Alerts
      description: Customer communication channel settings.
      $ref: definitions.yaml#/alerts
    azure:
      title: Azure
      additionalProperties: false
      description: Azure specific configuration.
      properties:
        appgw:
          properties:
            isManaged:
              default: true
              description: Determines whether this AppGW Ingress Controller is installed as an AKS addon.
              type: boolean
          type: object
        monitor:
          $ref: definitions.yaml#/azureMonitor
        storageType:
          title: Storage types
          description: Storage types for classes used in Otomi.
          properties:
            fast:
              type: string
            standard:
              type: string
      required:
        - resourceGroup
        - subscriptionId
        - tenantId
      x-provider: azure
    cluster:
      $ref: cluster.yaml#/BaseCluster
    customer:
      title: Customer
      description: A customer's settings.
      additionalProperties: false
      properties:
        name:
          type: string
          title: Name
    dns:
      $ref: definitions.yaml#/dns_
    kms:
      additionalProperties: false
      $ref: 'definitions.yaml#/kms'
    home:
      title: Home alerts
      description: Communication channel settings to share with an organization.
      additionalProperties: false
      $ref: definitions.yaml#/alerts
    oidc:
      title: OIDC
      description: OpenID Connect settings.
      additionalProperties: false
      properties:
        adminGroupID:
          title: Admin group ID
          type: string
        apiUrl:
          title: API URL
          type: string
        authUrl:
          title: Authentication URL
          type: string
          $ref: definitions.yaml#/url
        clientID:
          title: Client ID
          type: string
        clientSecret:
          title: Client Secret
          type: string
        issuer:
          title: Issuer
          type: string
          $ref: definitions.yaml#/url
        scope:
          title: Scope
          type: string
        subClaimMapper:
          default: sub
          description: Select OIDC claim to be used as a unique user identifier.
          title: Sub claim mapper
          type: string
        teamAdminGroupID:
          title: Team admin group ID
          type: string
        tenantID:
          title: Tenant ID
          type: string
        tokenUrl:
          title: Token URL
          $ref: definitions.yaml#/url
        usernameClaimMapper:
          description: Claim name used by Keycloak to identify incoming users from the identity provider.
          title: Username claim mapper
          type: string
    otomi:
      title: Otomi
      description: Settings for Otomi.
      additionalProperties: false
      properties:
        additionalClusters:
          title: Additional clusters
          description: Enter other k8s clusters, if there are any.
          type: array
          items:
            $ref: cluster.yaml#/AdditionalCluster
            required:
              - domainSuffix
              - name
              - provider
        adminPassword:
          type: string
        addons:
          additionalProperties: false
          description: Manage addon configuration.
          properties:
            conftest:
              description: Manage Conftest configuration.
              properties:
                enabled:
                  default: true
                  description: Use this flag to enable conftest for policy validation
                  title: Enabled
                  type: boolean
              title: Conftest
          title: Addons
        hasCloudLB:
          default: false
          description: Set this to true when an external LB exists or needs to be started (AWS ALB, Azure AppGW, Google Apigee). This will then be configured through ingress controllers. Expects existing LBs to terminate https. Currently this is only working correctly for Azure, and not for AWS and Google. AWS is close to completion.
          title: Cloud load balancer
          type: boolean
        isHomeMonitored:
          default: false
          description: Whether this cluster is home monitored (like when under a Premium SLA). Sends criticals home.
          title: Home monitored
          type: boolean
        isManaged:
          default: true
          description: Whether masters are managed and not under control. Set this to false when onprem.
          title: Managed masters
          type: boolean
        isMultitenant:
          default: true
          description: Will separate team metrics and logs. Disabling this lets everybody be admin and see everything.
          title: Multi-tenancy
          type: boolean
        mode:
          default: ee
          description: The otomi-core edition. Either community edition (ce) or enterprise edition (ee).
          enum:
            - ce
            - ee
          title: Otomi core edition
          type: string
        pullSecret:
          default: ''
          description: The pullsecret to deploy the Otomi API and Console. Requires an Otomi license.
          title: Pull secret
          type: string
    policies:
      $ref: policies.yaml#/policies
    smtp:
      title: SMTP
      description: Mail server settings.
      # https://prometheus.io/docs/alerting/latest/configuration/#tmpl_string
      additionalProperties: false
      properties:
        auth_identity:
          title: Authentication identity
          type: string
        auth_password:
          title: Authentication password
          type: string
        auth_secret:
          title: Authentication secret
          type: string
        auth_username:
          title: Authentication username
          type: string
        from:
          $ref: definitions.yaml#/email
          description: The "from" address. Defaults to alerts@$clusterDomain.
          title: From address
        hello:
          description: The hostname to identify to the SMTP server.
          title: Hello
          type: string
        smarthost:
          description: The smtp host:port combination.
          pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]):()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
          type: string
          title: Smart Host
      required:
        - smarthost
