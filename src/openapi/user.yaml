TeamAuthz:
  type: object
  description: Authorization for a team that user is a member
  properties:
    deniedAttributes:
      type: object
      description: Attribute paths that are not allowed to be modified by a user
      additionalProperties:
        description: Schema name
        type: array
        items:
          type: string
  required:
    - deniedAttributes
User:
  # readOnly: true
  x-acl:
    admin: [read]
    team: [read]
  properties:
    name:
      type: string
      description: A user name
      # readOnly: true
    email:
      $ref: definitions.yaml#/email
    isAdmin:
      type: boolean
      default: false
      description: If the user is admin.
      # readOnly: true
    authz:
      type: object
      additionalProperties:
        description: Team ID
        $ref: 'user.yaml#/TeamAuthz'
    teams:
      type: array
      default: []
      description: A list of teams the user belongs to.
      items:
        type: string
      # readOnly: true
      uniqueItems: true
    roles:
      type: array
      default: []
      description: A list of roles that the user has.
      items:
        type: string
      # readOnly: true
      uniqueItems: true
    sub:
      type: string
      description: A user subject.
  required:
    - authz
    - isAdmin
    - name
    - email
    - teams
    - roles
  type: object

TeamUser:
  x-acl:
    admin:
      - delete-any
      - read-any
      - create-any
      - update-any
    team:
      - delete
      - read
      - create
      - update
  properties:
    id:
      type: string
    teamId:
      $ref: 'definitions.yaml#/idName'
    name:
      type: string
      description: A user name
      # readOnly: true
    email:
      $ref: definitions.yaml#/email
  required:
    - name
    - email
  type: object
