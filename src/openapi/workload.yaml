Workload:
  x-acl:
    admin:
      - delete-any
      - read-any
      - create-any
      - update-any
    team:
      - delete
      - read
      - create
      - update
  type: object
  description: Define location of the application's manifests or chart
  properties:
    id:
      type: string
    teamId:
      $ref: definitions.yaml#/idName
    name:
      $ref: 'definitions.yaml#/wordCharacterPattern'
    url:
      description: URL to either Helm or Git repository
      $ref: 'definitions.yaml#/url'
    path:
      description: A relative directory path within the Git repository. Absolute paths cause errors. (only valid for applications sourced from Git)
      $ref: 'definitions.yaml#/wordCharacterPattern'
    chart:
      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
      $ref: 'definitions.yaml#/wordCharacterPattern'
    revision:
      description: In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
      $ref: 'definitions.yaml#/wordCharacterPattern'
      default: HEAD
    namespace:
      description: Workload namespace. Applicable only for team-admin. Default value is 'team-<team_id>'
      $ref: 'definitions.yaml#/domain'
    selectedChart:
      enum: ['deployment', 'ksvc', 'custom']
  required:
    - name
    - url

WorkloadValues:
  x-acl:
    admin:
      - read-any
      - update-any
    team:
      - read
      - update
  type: object
  properties:
    id:
      type: string
    teamId:
      $ref: definitions.yaml#/idName
    name:
      $ref: 'definitions.yaml#/wordCharacterPattern'
    values:
      type: object
      # select basic or advanced
      title: Minimal values
      properties:
        fullnameOverride:
          $ref: 'definitions.yaml#/wordCharacterPattern'
        image:
          type: object
          description: Add the registry and tag of the image to use
          properties:
            repository:
              $ref: 'definitions.yaml#/imageRegistry'
            tag:
              $ref: 'definitions.yaml#/imageTag'
          required:
            - repository
            - tag
        containerPorts:
          type: array
          title: Port
          items:
            type: object
            properties:
              name:
                type: string
                $ref: 'definitions.yaml#/wordCharacterPattern'
                default: http
              containerPort:
                type: integer
                $ref: 'definitions.yaml#/portNumber'
                default: 8080
                description: Declare TCP port used by the application
              protocol:
                type: string
                default: TCP
        resources:
          type: object
          title: Resources
          description: Adjust according to application consumption
          properties:
            requests:
              properties:
                cpu:
                  title: vCPU
                  $ref: 'definitions.yaml#/quantityCpu'
                  default: 200m
                memory:
                  title: Memory
                  $ref: 'definitions.yaml#/quantityMem'
                  default: 32Mi
            # only show in advanced
            limits:
              properties:
                cpu:
                  title: vCPU
                  $ref: 'definitions.yaml#/quantityCpu'
                memory:
                  title: Memory
                  $ref: 'definitions.yaml#/quantityMem'
        autoscaling:
          type: object
          title: Instances
          description: Configure the desired Minimal and Maximal replica's
          properties:
            minReplicas:
              title: Min
              type: integer
              default: 2
            maxReplicas:
              title: Max
              type: integer
              default: 10
        # only show in advanced
        env:
          $ref: 'definitions.yaml#/env'
        args:
          $ref: 'definitions.yaml#/args'
        labels:
          $ref: 'definitions.yaml#/labels'
        annotations:
          title: Annotations
          $ref: 'definitions.yaml#/annotations'
        secrets:
          description: select an existing secret to use as a secretRef.
          example: example-com
          title: Secret name
          type: array
          items:
            type: string
        podSecurityContext:
          title: Pod Security Context
          properties:
            runAsUser:
              $ref: 'definitions.yaml#/runAsUser'
            runAsNonRoot:
              $ref: 'definitions.yaml#/runAsNonRoot'
            readOnlyRootFilesystem:
              type: boolean
              default: false
        files:
          $ref: 'definitions.yaml#/files'
        secretMounts:
          $ref: 'definitions.yaml#/secretMounts'
        # only for deployment
        servicePorts:
          $ref: 'definitions.yaml#/servicePorts'
          # default:
          #   - name: http
          #     port: 80
          #     targetPort: http
          #     protocol: TCP
        serviceMonitor:
          properties:
            create:
              type: boolean
              default: false
            endpoints:
              $ref: 'definitions.yaml#/endpoints'

  required:
    - values
